X2=slider(66,75,step=1),
Y=slider(.01,1,step=.01))
library(manipulate)
manipulate(plot.bayes(x1=X1,x2=X2,y=Y),
X1=slider(55,65,step=1),
X2=slider(66,75,step=1),
Y=slider(.01,1,step=.01))
plot.bayes=function(x1=55,x2=75,y=.4){
sq=seq(55,75,.1)
plot(sq,prior(sq),type='l',lwd=3,lty='dashed',ylim=c(0,y),xlim=c(x1,x2))
points(sq,Posterior(sq),type='l',lwd=3,col='blue')
mn=integrate(f=function(x){x*Posterior(x)},0,100)$value
points(mn,0,cex=3,pch=3,col='blue')
points(mu,.02,cex=3,pch=3,col='red')
}
manipulate(plot.bayes(x1=X1,x2=X2,y=Y),
X1=slider(55,65,step=1),
X2=slider(66,75,step=1),
Y=slider(.01,1,step=.01))
mu
1/3
5/sd(data)
sd(data)
var(data)
5/var(data)
5/var(data)+(1/3)
postsd=5/var(data)+(1/3)
norm.update=function(prior=c(67,3),obs=data){
up.prec=(1/prior[2]^2)+(length(data)/var(data))
return(up.prec)
}
norm.update()
norm.update=function(prior=c(67,3),obs=data){
prior.var=prior[2]^2
prior.m=prior[1]
n=length(data)
up.prec=(1/prior.var)+(n/var(data))
up.m=((1/prior.var)/up.prec)*prior.m
up.m=up.m+(((n/var(data))/((n/var(data))+1/prior.var))*mean(data))
return(c(up.prec,up.m))
}
norm.update()
plot.bayes()
points(sq,dnorm(sq,67,3))
plot.bayes()
points(sq,dnorm(sq,70.62451,2.00238))
Posterior=function(x){
pl=Pr.x.Like(x)
integral=integrate(Pr.x.Like,-Inf,Inf)$value
return(pl/integral)
}
plot.bayes()
n=2
data=sample(pop,n)
plot.bayes()
Pr.x.Like(68)
Pr.x.Like(68)
Pr.x.Like(69)
integrate(Posterior,-Inf,Inf)
source('~/.active-rstudio-document')
data=read.table('ChorData_Kern_Mint_Hint_Metpos.txt',sep='\n',header=F,as.is=T)
data
str(data)
data=read.table('ChorData_Kern_Mint_Hint_Metpos.txt',sep='\t',header=F,as.is=T)
data
data=read.table('ChorData_Kern_Mint_Hint_Metpos.txt',sep='\t',header=F,as.is=T)
str(data)
data=read.delim('ChorData_Kern_Mint_Hint_Metpos.txt',sep='\t',header=F,as.is=T)
str(data)
data
head(data)
data=data[grep('^*',data[,1],invert=T),]
data
head(data)
data=read.delim('ChorData_Kern_Mint_Hint_Metpos.txt',sep='\t',header=F,as.is=T)
data=data[grep('^\\*',data[,1],invert=T),]
data
head(data)
data=data[grep('^=',data[,1],invert=T),]
head(data)
data
i
approach=matrix('',ncol = 4,nrow=nrow(data))
data[,5:8]
data[,5:8]%in%as.character(1:20)
data[200,5:8]%in%as.character(1:20)
data[200,]
data[200,5:8]
data[i,c(5:8)[data[i,5:8]%in%as.character(1:20)]]
data[200,c(5:8)[data[200,5:8]%in%as.character(1:20)]]
approach=matrix('',ncol = 4,nrow=nrow(data))
for(i in 1:nrow(data)){
hit=data[i,c(5:8)[data[i,5:8]%in%as.character(1:20)]]
hit=as.numeric(hit)
hit[hit>4]=4
hit=as.character(hit)
data[i,c(5:8)[data[i,5:8]%in%as.character(1:20)]]=hit
}
data=read.delim('ChorData_Kern_Mint_Hint_Metpos.txt',sep='\t',header=F,as.is=T)
data=data[grep('^\\*',data[,1],invert=T),]
data=data[grep('^=',data[,1],invert=T),]
data[data[,5]%in%as.character(5:20),5]='4'
data=read.delim('ChorData_Kern_Mint_Hint_Metpos.txt',sep='\t',header=F,as.is=T)
data=data[grep('^\\*',data[,1],invert=T),]
data=data[grep('^=',data[,1],invert=T),]
#how is note approached?
for(i in 5:8) data[data[,i]%in%as.character(5:20),i]='4'
data
approach=data[,5:8]
tail(approach)
tail(letters,-1)
left=approach
for(j in 5:8){
for(i in 1:(nrow(approach)-1)){
if(approach[i,j] %in% c('1','2','3','4')){
approach[i,j]=head(
tail(approach[,j],-i)[tail(approach[,j],-i)%in%c('1','2','3','4')[1]]
,1)
print(i)
}
}
}
left=approach
for(j in 5:8){
for(i in 1:(nrow(approach)-1)){
if(approach[i,j] %in% c('1','2','3','4')){
left[i,j]=tail(approach[,j],-i)[tail(approach[,j],-i)%in%c('1','2','3','4')[1]]
}
print(i)
}
}
approach[1,1]
approach[1,1] %in% c('1','2','3','4')
left=approach
for(j in 5:8){
for(i in 1:(nrow(approach)-1)){
print(i)
if(approach[i,j] %in% c('1','2','3','4')){
left[i,j]=tail(approach[,j],-i)[tail(approach[,j],-i)%in%c('1','2','3','4')[1]]
}
}
}
left=approach
for(j in 1:4){
for(i in 1:(nrow(approach)-1)){
print(i)
if(approach[i,j] %in% c('1','2','3','4')){
left[i,j]=tail(approach[,j],-i)[tail(approach[,j],-i)%in%c('1','2','3','4')[1]]
}
}
}
tail(approach[,j],-1)
tail(approach[,j],-2)
tail(approach[,j],-10000)
head(tail(approach[,j],-10000))
head(tail(approach[,j],-0))
head(tail(approach[,j],-1))
head(tail(approach[,j],-2))
head(tail(approach[,j],-3))
left=approach
for(j in 1:4){
for(i in 1:(nrow(approach)-1)){
print(i)
if(approach[i,j] %in% c('1','2','3','4')){
left[i,j]=tail(approach[,j],-i)[tail(approach[,j],-i)%in%c('1','2','3','4')][1]
}
}
}
left
hits=approach[,1] %in% c('1','2','3','4')
hits
hits=approach[approach[,1] %in% c('1','2','3','4'),1]
hits
rotate(letters,-1)
left=approach
for(i in 1:4){
hits=approach[approach[,1] %in% c('1','2','3','4'),1]
hits=rotate(hits,-1)
approach[approach[,1] %in% c('1','2','3','4'),1]=hits
}
for(i in 5:8) data[data[,i]%in%as.character(5:20),i]='4'
approach=data[,5:8]
#how is note left?
left=approach
for(i in 1:4){
hits=approach[approach[,1] %in% c('1','2','3','4'),1]
hits=rotate(hits,-1)
left[approach[,1] %in% c('1','2','3','4'),1]=hits
}
approach
cbind(approach,left)
head(cbind(approach,left),100
)
left=approach
for(i in 1:4){
hits=approach[approach[,i] %in% c('1','2','3','4'),i]
hits=rotate(hits,-1)
left[approach[,i] %in% c('1','2','3','4'),i]=hits
}
head(cbind(approach,left),100
)
mean(c(2,5,7))
mean(c(2,5,8))
mean(c(2,4.5,8))
mean(c(2,4.5,7))
mean(c(4,9,14))
data
data[,9]
count.char(' ','8 9 9')
hints=matrix('',nrow=nrow(data),ncol=3)
for(i in nrow(data)){
if(count.char(' ',data[i,9])==2){
hints[i,]=unlist(strsplit(data[i,9],sep=' '))
}
}
hints=matrix('',nrow=nrow(data),ncol=3)
for(i in nrow(data)){
if(count.char(' ',data[i,9])==2){
hints[i,]=unlist(strsplit(data[i,9],split=' '))
}
}
hints
hints=matrix('',nrow=nrow(data),ncol=3)
for(i in 1:nrow(data)){print(nrow(data)-i)
if(count.char(' ',data[i,9])==2){
hints[i,]=unlist(strsplit(data[i,9],split=' '))
}
}
hints
data[count.char(' ',data[,9])==2,9]
strsplit(data[count.char(' ',data[,9])==2,9],split=' ')
as.data.frame(strsplit(data[count.char(' ',data[,9])==2,9],split=' '))
stack(strsplit(data[count.char(' ',data[,9])==2,9],split=' '))
do.call('rbind',strsplit(data[count.char(' ',data[,9])==2,9],split=' ')))
do.call('rbind',strsplit(data[count.char(' ',data[,9])==2,9],split=' '))
hints=matrix('',nrow=nrow(data),ncol=3)
hints[chount.char(' ',data[,9])==2,]=hits
hints[count.char(' ',data[,9])==2,]=hits
hints[count.char(' ',data[,9])==2,]
hits=do.call('rbind',strsplit(data[count.char(' ',data[,9])==2,9],split=' '))
hits
str(hits)
hits=as.data.frame(do.call('rbind',strsplit(data[count.char(' ',data[,9])==2,9],split=' ')))
str(hints[count.char(' ',data[,9])==2,])
hits=do.call('rbind',strsplit(data[count.char(' ',data[,9])==2,9],split=' '))
str(hints[count.char(' ',data[,9])==2,])
hints[count.char(' ',data[,9])==2,]=hits
hints
hints
data[,9]
head(cbind(approach,left))
head(cbind(approach,left,hints))
hints=matrix('',nrow=nrow(data),ncol=3)
for(i in 1:nrow(data)){print(nrow(data)-i)
if(count.char(' ',data[i,9])==2){
hints[i,]=unlist(strsplit(data[i,9],split=' '))
}
if(count.char(' ',data[i,9])==1){
hints[i,which(approach[i,2:4]!='.')]=unlist(strsplit(data[i,9],split=' '))
}
}
hints
head(cbind(approach,left,hints))
head(cbind(approach,left,hints),100)
hints=matrix('',nrow=nrow(data),ncol=3)
for(i in 1:nrow(data)){print(i)
if(count.char(' ',data[i,9])==2){
hints[i,]=unlist(strsplit(data[i,9],split=' '))
}
if(count.char(' ',data[i,9])==1){
hints[i,which(approach[i,2:4]!='.')]=unlist(strsplit(data[i,9],split=' '))
}
}
cbind(approach,left,hints)[145:155,]
count.char(' ',data[149,9])
data[149,9]
source('~/.active-rstudio-document')
data
str(data)
source('~/.active-rstudio-document')
head(cbind(approach,left,hints),100)
source('~/.active-rstudio-document')
head(cbind(approach,left,hints),100)
hints[hints=='']='.'
head(cbind(approach,left,hints),100)
table(approach[approach[,2]!='.',2],left[left[,2]!=,2])
table(approach[approach[,2]!='.',2],left[left[,2]!='.',2])
table(approach[approach[,2]!='.',2],left[left[,2]!='.',2])[1:4,1:4]
prop.table(table(approach[approach[,2]!='.',2],left[left[,2]!='.',2])[1:4,1:4])
mel=c(data[,2],data[,3],data[,4])
mel
mel=mel[mel!='.']
mel
mel=c(data[,2],data[,3],data[,4])
c(approach[,1],approach[,2],approach[,3])
paste(c(approach[,1],approach[,2],approach[,3]),c(left[,1],left[,2],left[,3]),sep='-')
mel.data=data.frame(Note=mel=c(data[,2],data[,3],data[,4]),
Motion=paste(c(approach[,2],approach[,3],approach[,4]),c(left[,2],left[,3],left[,4]),sep='-'),
Hint=c(hints[,1],hints[,2],hints[,3]))
mel.data=data.frame(Note=c(data[,2],data[,3],data[,4]),
Motion=paste(c(approach[,2],approach[,3],approach[,4]),c(left[,2],left[,3],left[,4]),sep='-'),
Hint=c(hints[,1],hints[,2],hints[,3]))
mel.data
mel=mel[mel$Note!='.',]
mel.data=mel.data[mel.data$Note!='.',]
mel.data
table(mel.data[,2:3])
mel.data=mel.data[grep('\\]',invert=T,mel.data[,1]),]
table(mel.data[,2:3])
mel.data[,1]
mel.data=mel.data[grep('\\]',invert=T,mel.data[,2]),]
table(mel.data[,2:3])
mel.data=mel.data[grep('\]',invert=T,mel.data[,2]),]
mel.data=mel.data[grep('\\\]',invert=T,mel.data[,2]),]
mel.data=mel.data[grep('\\\\]',invert=T,mel.data[,2]),]
table(mel.data[,2:3])
mel.data=mel.data[grep(']',invert=T,mel.data[,2]),]
table(mel.data[,2:3])
mel.data=mel.data[grep('[A-Za-z]',invert=T,mel.data[,2]),]
table(mel.data[,2:3])
mel.data[,1]
mel.data[,2]
mel.data[,3]
table(mel.data[,2:3])
hints
hints[hints!='.']
hints[hints!='.']=mod(as.numeric(hints[hints!='.']),7)
hints
mel.data=data.frame(Note=c(data[,2],data[,3],data[,4]),
Motion=paste(c(approach[,2],approach[,3],approach[,4]),c(left[,2],left[,3],left[,4]),sep='-'),
Hint=c(hints[,1],hints[,2],hints[,3]))
mel.data=mel.data[mel.data$Note!='.',]
mel.data=mel.data[grep('[A-Za-z]',invert=T,mel.data[,2]),]
mel.data=data.frame(Note=c(data[,2],data[,3],data[,4]),stringsAsFactors = F,
Motion=paste(c(approach[,2],approach[,3],approach[,4]),c(left[,2],left[,3],left[,4]),sep='-'),
Hint=c(hints[,1],hints[,2],hints[,3]))
mel.data=mel.data[mel.data$Note!='.',]
mel.data=mel.data[grep('[A-Za-z]',invert=T,mel.data[,2]),]
mel.data
table(mel.data[,2:3])
prop.table(table(mel.data[,2:3]),1)
prop.table(table(mel.data[,2:3]),2)
round(prop.table(table(mel.data[,2:3]),2),3)
.058+.028+.042+.063+.045+.001+.001
prop.table(table(mel.data[,2:3]),1)
round(prop.table(table(mel.data[,2:3]),1),3)
cons=rep(0,nrow(mel.data))
cons[mel.data$Hint%in%c('1','3','5','6')]
cons[mel.data$Hint%in%c('1','3','5','6')]=1
cons
mel.data$Cosonant=cons
round(prop.table(table(mel.data[,c(2,4)]),1),3)
y=round(prop.table(table(mel.data[,c(2,4)]),1),3)
y
y[,1]/y[,2]
y[,2]/y[,1]
plot(y[,2]/y[,1])
barplot(y[,2]/y[,1])
mel.data=data.frame(Note=c(data[,2],data[,3],data[,4]),stringsAsFactors = F,
Motion=paste(c(approach[,2],approach[,3],approach[,4]),c(left[,2],left[,3],left[,4]),sep='-'),
Approach=c(approach[,2],approach[,3],approach[,4]),
Left=c(left[,1],left[,2],left[,3]),
Hint=c(hints[,1],hints[,2],hints[,3]))
mel.data=mel.data[mel.data$Note!='.',]
mel.data=mel.data[grep('[A-Za-z]',invert=T,mel.data[,2]),]
cons=rep(0,nrow(mel.data))
cons[mel.data$Hint%in%c('1','3','5','6')]=1
mel.data
table(mel.data$Con,mel.data$Ap)
table(mel.data$Con,mel.data$Appr)
table(mel.data$Cos,mel.data$Appr)
mel.data$Consonant=cons
table(mel.data$Cons,mel.data$Appr)
prop.table(table(mel.data$Cons,mel.data$Appr),1)
prop.table(table(mel.data$Cons,mel.data$Appr),2)
prop.table(table(mel.data$Cons,mel.data$Appr,mel.data$Left),2)
prop.table(table(mel.data$Cons,mel.data$Appr),2)
y=prop.table(table(mel.data$Cons,mel.data$Appr),2)
yl=prop.table(table(mel.data$Cons,mel.data$Left),2)
yl
mel.data=mel.data[mel.data$Note!='.',]
mel.data=data.frame(Note=c(data[,2],data[,3],data[,4]),stringsAsFactors = F,
Motion=paste(c(approach[,2],approach[,3],approach[,4]),c(left[,2],left[,3],left[,4]),sep='-'),
Approach=c(approach[,2],approach[,3],approach[,4]),
Left=c(left[,1],left[,2],left[,3]),
Hint=c(hints[,1],hints[,2],hints[,3]))
mel.data=mel.data[mel.data$Note!='.',]
mel.data=mel.data[grep('[A-Za-z]',invert=T,mel.data[,2]),]
mel.data=mel.data[grep('[A-Za-z]',invert=T,mel.data[,3]),]
mel.data=mel.data[grep('[A-Za-z]',invert=T,mel.data[,4]),]
yl=prop.table(table(mel.data$Cons,mel.data$Left),2)
cons=rep(0,nrow(mel.data))
cons[mel.data$Hint%in%c('1','3','5','6')]=1
mel.data$Consonant=cons
yl=prop.table(table(mel.data$Cons,mel.data$Left),2)
yl
ya=prop.table(table(mel.data$Cons,mel.data$Appr),2)
yl=yl[2,]/yl[1,]
ya=ya[2,]/ya[1,]
ya
yl
yl=yl[-1]
yl
barplpot(cbind(yl,ya))
barplot(cbind(yl,ya))
barplot(cbind(yl,ya),beside=T)
barplot(rbind(yl,ya),beside=T)
barplot(rbind(ya,yl),beside=T)
mel.data
glm(mel.data$Cons~mel.data$Approach)
glm(mel.data$Cons~factor(mel.data$Approach))
glm(mel.data$Cons~factor(mel.data$Approach),family=binomial())
summary(glm(mel.data$Cons~factor(mel.data$Approach),family=binomial()))
summary(glm(mel.data$Cons~factor(mel.data$Approach)*factor(mel.data$Left),family=binomial()))
tapply(mel.data$Cons,mel.data$App,mean)
tapply(mel.data$Cons,list(mel.data$App,mel.data$Left),mean)
mel.data
mel.data=data.frame(Note=c(data[,2],data[,3],data[,4]),stringsAsFactors = F,
Motion=paste(c(approach[,2],approach[,3],approach[,4]),c(left[,2],left[,3],left[,4]),sep='-'),
Approach=c(approach[,2],approach[,3],approach[,4]),
Left=c(left[,2],left[,3],left[,4]),
Hint=c(hints[,1],hints[,2],hints[,3]))
mel.data=mel.data[mel.data$Note!='.',]
mel.data=mel.data[grep('[A-Za-z]',invert=T,mel.data[,2]),]
mel.data=mel.data[grep('[A-Za-z]',invert=T,mel.data[,3]),]
mel.data=mel.data[grep('[A-Za-z]',invert=T,mel.data[,4]),]
cons=rep(0,nrow(mel.data))
cons[mel.data$Hint%in%c('1','3','5','6')]=1
mel.data$Consonant=cons
tapply(mel.data$Cons,list(mel.data$App,mel.data$Left),mean)
h=tapply(mel.data$Cons,list(mel.data$App,mel.data$Left),mean)
plot(1:4,1:4.col='white')
plot(1:4,1:4,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=h[i,j]) }}
plot(1:4,1:4,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=h[i,j]*2) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(h[i,j])) }}
plot(1:4,1:4,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(h[i,j])) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(h[i,j])*3) }}
plot(1:4,1:4,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(h[i,j])*3) }}
plot(0:5,0:5,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(h[i,j])*10) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(log(h[i,j]))*10) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=log(sqrt(h[i,j]))) }}
warnings()
log(h)
log(h)+4
for(i in 1:4) {for(j in 1:4){points(i,j,cex=log(sqrt(h[i,j]))+4) }}
plot(0:5,0:5,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=log(sqrt(h[i,j]))+4) }}
odds(g)
odds(h)
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(odds(h[i,j])) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(odds(h[i,j]))) }}
plot(0:5,0:5,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(odds(h[i,j]))) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(odds(h[i,j]))*2) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(odds(h[i,j]))*3) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(odds(h[i,j]))*4) }}
plot(0:5,0:5,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(odds(h[i,j]))*4) }}
sqrt(5,2)
sqrt(c(5,2))
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(odds(h[i,j]))*4) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(h[i,j])*4) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(h[i,j])*20) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(odds(h[i,j]))*4) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(log(odds(h[i,j])))*4) }}
plot(0:5,0:5,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(log(odds(h[i,j])))*4) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(log(odds(h[i,j])))*40) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(log(odds(h[i,j])))*100) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(log(odds(h[i,j])))*10) }}
plot(0:5,0:5,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(log(odds(h[i,j])))*10) }}
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(log(odds(h[i,j])))*6) }}
plot(0:5,0:5,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(log(odds(h[i,j])))*4) }}
plot(0:5,0:5,col='white')
for(i in 1:4) {for(j in 1:4){points(i,j,cex=sqrt(odds(h[i,j]))*4) }}
h
glm(mel.data$Cons~factor(mel.data$Approach),family=binomial())
glm(mel.data$Cons~factor(mel.data$Approach)+factor(mel.data$Left),family=binomial())
summary(glm(mel.data$Cons~factor(mel.data$Approach)+factor(mel.data$Left),family=binomial()))
mel.data$Approach=factor(mel.data$Approach,levels=c(2,1,3,4))
mel.data$Left=factor(mel.data$Left,levels=c(2,1,3,4))
glm(mel.data$Cons~factor(mel.data$Approach)+factor(mel.data$Left),family=binomial())
summary(glm(mel.data$Cons~factor(mel.data$Approach)+factor(mel.data$Left),family=binomial()))
table(mel.data$Cons,mel.data$Appr)
chisq.test(table(mel.data$Cons,mel.data$Appr))
2794/11537
27974/11537
summary(glm(mel.data$Cons~factor(mel.data$Approach)+factor(mel.data$Left),family=binomial()))
logit2p(.8)
contr.sum(4)
summary(glm(mel.data$Cons~factor(mel.data$Approach)+factor(mel.data$Left),family=binomial()))
exp(.12)
exp(.47)
exp(.16)
exp(.15)
exp(.40)
exp(.29)
summary(glm(mel.data$Cons~factor(mel.data$Approach)*factor(mel.data$Left),family=binomial()))
.47+.39+.31
exp(.47+.39+.31)
fit=(glm(mel.data$Cons~factor(mel.data$Approach)*factor(mel.data$Left),family=binomial()))
contrasts(mel.data$Approach)
contrasts(mel.data$Approach)=contrasts(mel.data$Left)=contr.sum(4)
fitsum=(glm(mel.data$Cons~factor(mel.data$Approach)*factor(mel.data$Left),family=binomial()))
summary(fitsum)
